<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:FRESHLyricMaker.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:resx="clr-namespace:FRESHLyricMaker.Properties"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="FRESHLyricMaker.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="FRESHLyricMaker">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

	<NativeMenu.Menu>
		<NativeMenu>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_File}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_File_Audio}" Command="{Binding LoadAudioFileCommand}" Gesture="Ctrl+O"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_File_LRC}" Command="{Binding LoadLRCFileCommand}"/>
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_Options}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Options_Volume}">
						<NativeMenu>
							<NativeMenuItem Header="_25%" Command="{Binding SetVolume25Command}"/>
							<NativeMenuItem Header="_50%" Command="{Binding SetVolume50Command}"/>
							<NativeMenuItem Header="_75%" Command="{Binding SetVolume75Command}"/>
							<NativeMenuItem Header="_100%" Command="{Binding SetVolume100Command}"/>
						</NativeMenu>
					</NativeMenuItem>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Options_Theme}">
						<NativeMenu>
							<NativeMenuItem Header="_Dark" Command="{Binding SetThemeToDarkCommand}"/>
							<NativeMenuItem Header="_Light" Command="{Binding SetThemeToLightCommand}"/>
						</NativeMenu>
					</NativeMenuItem>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Options_Language}">
						<NativeMenu>
							<NativeMenuItem Header="{x:Static resx:Resources.Menu_Options_Language_Automatic}" IsChecked="True"/>
							<NativeMenuItem Header="_English"/>
						</NativeMenu>
					</NativeMenuItem>
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_Help}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Help_OpenHelp}" Command="{Binding ShowHelpDialogCommand}" Gesture="F1"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Help_About}" Command="{Binding ShowAboutDialogCommand}"/>
				</NativeMenu>
			</NativeMenuItem>
		</NativeMenu>
	</NativeMenu.Menu>
	
	<DockPanel>
		<DockPanel DockPanel.Dock="Bottom" Background="{DynamicResource ForegroundColor}">
			<TextBlock Margin="10,0,0,0" DockPanel.Dock="Left" Text="{Binding CurrentTime, StringFormat=\{0:mm\\:ss\\:fff\}}" VerticalAlignment="Center"/>
			<Button Margin="10,0,10,0" DockPanel.Dock="Right" Content="{x:Static resx:Resources.ForwardFiveSec}" Command="{Binding ForwardFiveSeconds}"/>
			<Button Margin="10,0,0,0" DockPanel.Dock="Right" Content="{x:Static resx:Resources.PlayPause}" Command="{Binding PlayPauseCommand}"/>
			<Button DockPanel.Dock="Right" Content="{x:Static resx:Resources.BackFiveSec}" Command="{Binding BackFiveSeconds}"/>
			<TextBlock Margin="0,0,10,0" DockPanel.Dock="Right" Text="{Binding TotalTime, StringFormat=\{0:mm\\:ss\\:fff\}}" VerticalAlignment="Center"/>
			<Slider Value="{Binding CurrentTimeSeconds}" Maximum="{Binding TotalTimeSeconds}"/>
			
		</DockPanel>

		<DockPanel DockPanel.Dock="Top">
			<CheckBox DockPanel.Dock="Right" Content="{x:Static resx:Resources.WordByWordMode}" IsChecked="{Binding WordByWordMode}" Margin="0,0,10,0"/>
			<NativeMenuBar/>
		</DockPanel>


		<TabControl SelectedIndex="{Binding SelectedTabIndex}" HorizontalAlignment="Stretch">
			<TabItem Header="{x:Static resx:Resources.Write}">
				<ScrollViewer>
					<WrapPanel Orientation="Horizontal">

						<DockPanel Background="{DynamicResource ForegroundColor}" Margin="5,5,0,0">
							<Panel DockPanel.Dock="Top" Height="45">
								<TextBlock Margin="5,5,0,5" Text="{x:Static resx:Resources.SourceLanguage}" VerticalAlignment="Center" Foreground="{DynamicResource SecondaryTextColor}"/>
							</Panel>

							<TextBox Text="{Binding SourceLanguageText}" AcceptsReturn="True" MinWidth="250" MinHeight="250"/>
						</DockPanel>
						
						<WrapPanel DockPanel.Dock="Right" Orientation="Horizontal">
							<ItemsControl Items="{Binding Translations}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel Orientation="Horizontal"/>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.DataTemplates>
									<DataTemplate>
										<DockPanel Background="{DynamicResource ForegroundColor}" Margin="5,5,0,0">
											<DockPanel DockPanel.Dock="Top" Margin="5,5,0,5" Height="35">
												<TextBox DockPanel.Dock="Left" Text="{Binding LanguageCode}"/>
												<TextBlock Text="{Binding LanguageName}" Foreground="{DynamicResource SecondaryTextColor}" Margin="5,0,0,0" VerticalAlignment="Center"/>
											</DockPanel>
											<TextBox Text="{Binding Text}" AcceptsReturn="True" MinWidth="250" MinHeight="250" Watermark="{x:Static resx:Resources.TranslationHint}"/>
										</DockPanel>
									</DataTemplate>
								</ItemsControl.DataTemplates>
							</ItemsControl>
						</WrapPanel>

						<Button Content="{x:Static resx:Resources.AddTranslation}" Command="{Binding AddTranslationCommand}" Margin="10,0,0,0" VerticalAlignment="Center"/>
					</WrapPanel>
				</ScrollViewer>

			</TabItem>
			<TabItem Header="{x:Static resx:Resources.Synchronize}">
				<DockPanel>
					<DockPanel DockPanel.Dock="Bottom" Margin="0,10,0,10" IsVisible="{Binding IsReady}">
						<Button DockPanel.Dock="Right" Command="{Binding NextWordCommand}" IsVisible="{Binding WordByWordMode}" Margin="10,0,0,0" HotKey="Ctrl+Right">
							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.NextWord}" HorizontalAlignment="Center"/>
								<TextBlock Text="[Ctrl+→]" Foreground="{DynamicResource SecondaryTextColor}" FontSize="10" HorizontalAlignment="Center"/>
							</StackPanel>
						</Button>
						<Button DockPanel.Dock="Right" Command="{Binding PreviousWordCommand}" IsVisible="{Binding WordByWordMode}" Margin="10,0,0,0" HotKey="Ctrl+Left">
							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.PreviousWord}" HorizontalAlignment="Center"/>
								<TextBlock Text="[Ctrl+←]" Foreground="{DynamicResource SecondaryTextColor}" FontSize="10" HorizontalAlignment="Center"/>
							</StackPanel>
						</Button>
						<Button DockPanel.Dock="Right" Command="{Binding TimestampWordCommand}" IsVisible="{Binding WordByWordMode}" Margin="10,0,0,0" HotKey="Ctrl+.">
							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.TimestampWord}" HorizontalAlignment="Center"/>
								<TextBlock Text="[Ctrl+.]" Foreground="{DynamicResource SecondaryTextColor}" FontSize="10" HorizontalAlignment="Center"/>
							</StackPanel>
						</Button>
						<Button DockPanel.Dock="Left" Command="{Binding PreviousLineCommand}" Margin="0,0,10,0" HotKey="Ctrl+Up">
							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.PreviousLine}" HorizontalAlignment="Center"/>
								<TextBlock Text="[Ctrl+↑]" Foreground="{DynamicResource SecondaryTextColor}" FontSize="10" HorizontalAlignment="Center"/>
							</StackPanel>
						</Button>
						<Button DockPanel.Dock="Left" Command="{Binding NextLineCommand}" Margin="0,0,10,0" HotKey="Ctrl+Down">
							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.NextLine}" HorizontalAlignment="Center"/>
								<TextBlock Text="[Ctrl+↓]" Foreground="{DynamicResource SecondaryTextColor}" FontSize="10" HorizontalAlignment="Center"/>
							</StackPanel>
						</Button>
						<Button HorizontalAlignment="Stretch" Command="{Binding TimestampLineCommand}" HotKey="Ctrl+,">
							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.TimestampLine}" HorizontalAlignment="Center"/>
								<TextBlock Text="[Ctrl+,]" Foreground="{DynamicResource SecondaryTextColor}" FontSize="10" HorizontalAlignment="Center"/>
							</StackPanel>
						</Button>
					</DockPanel>
					
					<ListBox Items="{Binding Song}" SelectedIndex="{Binding SelectedLineIndex}" HorizontalAlignment="Stretch" SelectionMode="AlwaysSelected" Background="{DynamicResource BackgroundColor}" ScrollViewer.HorizontalScrollBarVisibility="Auto" IsVisible="{Binding IsReady}">
						<ListBox.Styles>
							<Style Selector="ListBox /template/ ListBox#PART_ItemsPresenter">
								<Setter Property="Margin" Value="-50"/>
								<Setter Property="HorizontalAlignment" Value="Stretch"/>
							</Style>
						</ListBox.Styles>
						<ListBox.DataTemplates>
							<DataTemplate>
								<Border CornerRadius="5" Background="{DynamicResource ForegroundColor}" HorizontalAlignment="Stretch" Margin="-5" Padding="5">
									<DockPanel>
										<TextBlock DockPanel.Dock="Left" Text="{Binding TimeStamp, StringFormat=\{0:mm\\:ss\\:fff\}}" Margin="0,0,10,0" Foreground="{DynamicResource SecondaryTextColor}" VerticalAlignment="Center"/>
										<ListBox Items="{Binding Words}" SelectedIndex="{Binding SelectedWordIndex}" SelectionMode="Single">
											<ListBox.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Horizontal"/>
												</ItemsPanelTemplate>
											</ListBox.ItemsPanel>
											<ListBox.DataTemplates>
												<DataTemplate>
													<TextBlock Text="{Binding Word}" ToolTip.ShowDelay="100">
														<ToolTip.Tip>
															<TextBlock Text="{Binding TimeStamp, StringFormat=\{0:mm\\:ss\\:fff\}}"/>
														</ToolTip.Tip>
													</TextBlock>
												</DataTemplate>
											</ListBox.DataTemplates>
										</ListBox>
									</DockPanel>
								</Border>
							</DataTemplate>
						</ListBox.DataTemplates>
					</ListBox>
					
					<TextBlock Text="{x:Static resx:Resources.Synchronize_ImportHint}" IsVisible="{Binding !IsReady}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				</DockPanel>
			</TabItem>
			<TabItem Header="{x:Static resx:Resources.Export}">
				<ScrollViewer>
					<StackPanel>
						<WrapPanel>
							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.Export_Format}" FontWeight="Bold" FontSize="16"/>
								<RadioButton GroupName="FormatGroup" Content="{x:Static resx:Resources.Export_PlainLRC}" IsChecked="{Binding ExportPlainLRC}"/>
								<TextBlock FontSize="10" Foreground="{DynamicResource SecondaryTextColor}" Text="{x:Static resx:Resources.Export_PlainLRC_Hint}"/>
								<RadioButton GroupName="FormatGroup" Content="{x:Static resx:Resources.Export_EnhancedLRC}" IsChecked="{Binding ExportEnhancedLRC}"/>
								<TextBlock FontSize="10" Foreground="{DynamicResource SecondaryTextColor}" Text="{x:Static resx:Resources.Export_EnhancedLRC_Hint}"/>
								<CheckBox Content="{x:Static resx:Resources.Export_WithTranslations}" IsChecked="{Binding ExportWithTranslations}"/>
								<TextBlock FontSize="10" Foreground="{DynamicResource SecondaryTextColor}" Text="{x:Static resx:Resources.Export_WithTranslations_Hint}"/>
							</StackPanel>

							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.Export_LRCOptions}" FontWeight="Bold" FontSize="16"/>
								<TextBlock FontSize="10" Foreground="{DynamicResource SecondaryTextColor}" Text="{x:Static resx:Resources.Export_LRCOptions_HintOne}"/>
								<TextBlock FontSize="10" Foreground="{DynamicResource SecondaryTextColor}" Text="{x:Static resx:Resources.Export_LRCOptions_HintTwo}"/>
								<CheckBox Content="{x:Static resx:Resources.Export_LRCOptions_WithoutMetadata}" IsChecked="{Binding ExportWithoutMetadata}"/>
								<CheckBox Content="{x:Static resx:Resources.Export_LRCOptions_TwoDigitPrecision}" IsChecked="{Binding ExportWithTwoDigitPrecision}"/>
							</StackPanel>

							<StackPanel>
								<TextBlock Text="{x:Static resx:Resources.Preview}" FontWeight="Bold" FontSize="16"/>
								<Border CornerRadius="5" Background="{DynamicResource ForegroundColor}" Padding="10">
									<TextBlock Text="{Binding LrcFilePreview}"/>
								</Border>
							</StackPanel>

						</WrapPanel>
						<Button Content="{x:Static resx:Resources.ExportEnthusiastically}" Command="{Binding ExportCommand}" Margin="0,10,0,0"/>
					</StackPanel>
					
				</ScrollViewer>
			</TabItem>
		</TabControl>
	</DockPanel>
	
</Window>
